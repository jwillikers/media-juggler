diff --git a/psi/fapi_ft.c b/psi/fapi_ft.c
index 2f24eee..a084b9b 100644
--- a/psi/fapi_ft.c
+++ b/psi/fapi_ft.c
@@ -100,7 +100,7 @@ typedef struct FT_IncrementalRec_
     FAPI_metrics_type metrics_type;        /* determines whether metrics are replaced, added, etc. */
 } FT_IncrementalRec;
 
-FT_CALLBACK_DEF( void* )
+static void *
 FF_alloc( FT_Memory memory, long size)
 {
     gs_memory_t *mem = (gs_memory_t *)memory->user;
@@ -108,7 +108,7 @@ FF_alloc( FT_Memory memory, long size)
     return(gs_malloc (mem, size, 1, "FF_alloc"));
 }
 
-FT_CALLBACK_DEF( void* )
+static void *
 FF_realloc(FT_Memory memory, long cur_size, long new_size, void* block)
 {
     gs_memory_t *mem = (gs_memory_t *)memory->user;
@@ -128,7 +128,7 @@ FF_realloc(FT_Memory memory, long cur_size, long new_size, void* block)
     return(tmp);
 }
 
-FT_CALLBACK_DEF( void )
+static void
 FF_free(FT_Memory memory, void* block)
 {
     gs_memory_t *mem = (gs_memory_t *)memory->user;
@@ -179,16 +179,16 @@ static int FF_open_read_stream (gs_memory_t *mem, char *fname, FT_Stream *fts)
     if (code < 0){
         goto error_out;
     }
-    
+
     if (!pfn.fname) {
         code = e_undefinedfilename;
         goto error_out;
     }
-    
+
     if (pfn.iodev == NULL) {
         pfn.iodev = iodev_default(mem);
     }
-    
+
     if (pfn.iodev) {
         gx_io_device *const iodev = pfn.iodev;
         iodev_proc_open_file((*open_file)) = iodev->procs.open_file;
@@ -835,7 +835,7 @@ transform_decompose(FT_Matrix *a_transform, FT_UInt *xresp, FT_UInt *yresp,
          * axes were coincident with the axes of the page.
          */
         bool use_x = true;
-                
+
         if (*xresp < *yresp) {
             use_x = false;
         }
@@ -1598,7 +1598,7 @@ int gs_fapi_ft_instantiate( i_plugin_client_memory *a_memory, i_plugin_instance
 {
     FF_server *server = (FF_server*) a_memory->alloc(a_memory, sizeof (FF_server), "FF_server");
     int code;
-    
+
     if (!server)
         return e_VMerror;
     memset(server, 0, sizeof(*server));
